package projeto.academia2022.cliente;

import javax.swing.JOptionPane;

import projeto.academia2022.repo.OTI;
import projeto.academia2022.repo.OTI.OrdemPrioridade;
import projeto.academia2022.repo.Repositorio;

public class MenuCliente {

	public static void menu() {
		
		byte opcao;
		
		opcao = Byte.parseByte(
				JOptionPane.showInputDialog(null, "===Menu de Clientes==="
				+ "\nEscolha abaixo o que você deseja fazer:"
				+ "\n0 - Voltar;"
				+ "\n1 - Cadastrar um cliente;"
				+ "\n2 - Ver lista de clientes;"
				+ "\n3 - Procurar um cliente;"
				+ "\n4 - Ver tipos de planos;")
				);
		
		switch(opcao) {
		
		case 0:
			//o menu principal é um do-while mesmo...
			break;
		
		case 1:
			
			cadastrar();
			
			break;
			
		case 2:
			
			verClientes();
			
			break;
			
		case 3:
			
			//procurarCliente();
			
			break;
			
		case 4:
			
			deletar();
			
			break;
			
		case 5:
			
			verPlanos();
			
			break;
			
		default:
			
			JOptionPane.showMessageDialog(null, "Opção inválida!");
			menu();
			
			break;
			
		}
		
	}

//	//private static void procurarCliente() {
//		
//		String nome, cpf;
//		byte opcao;
//		
//		opcao = Byte.parseByte(
//				JOptionPane.showInputDialog(null, "Você deseja procurar por CPF ou por nome?"
//						+ "\n0 - Voltar;"
//						+ "\n1 - Nome;"
//						+ "\n2 - CPF;")
//				);
//		
//		switch(opcao) {
//		
//		case 0:
//			
//			menu();
//			
//			break;
//			
//		case 1:
//			
//			nome = JOptionPane.showInputDialog(null, "Digite o nome:");
//		
//			//for()
//			
//		}
//		
//	}

	@OTI(ordemPrioridade = OrdemPrioridade.IMPORTANTE, item = "Definir melhor os tipos de planos (valores principalmente) e fazer esse método mais otimizado e eficiente, já que eu fiz de maneira simples", quemAssume = "Qualquer um")
	private static void verPlanos() {
		
		JOptionPane.showMessageDialog(null, "Esses são os tipos de planos atuais:"
				+ "\n1º - Anual"
				+ "\nO cliente paga de maneira anual, com possibilidade de parcelemento de 6x. É caro, mas tem quem pague. Se tem mercado, é porque tem demanda"
				+ "\n2º - Mensal"
				+ "\nClássico pagamento mensal, o método principal de pagamento"
				+ "\n3º - Teste"
				+ "\nO cliente tem um desconto no pagamento e terá acesso a academia por completo por 3 meses, após esse período, ele pode"
				+ " alterar o tipo de plano ou cancelar ele.");
		menu();
		
	}
	

	@OTI(ordemPrioridade = OrdemPrioridade.CRITICO, item = "Fazer esse método de maneira mais otimizada (um laço de for talvez?) usando o JOptionPane", quemAssume = "Qualquer um")
	
	private static void verClientes() {

		//fiz de uma maneira bem simples, não faço idea de como fazer isso de uma maneira mais otimizada
		//dentro de um "for" por exemplo, que nem o syso é
		//como é com o JOptionPane, acho que dificulta as coisas
		//então fiz dessa maneira bem simples que, não é o ideal eu sei, mas dá para o gasto e serve o próposito
		//mesmo que meio mal
		//ei, é por isso que está com annotation OTI em Crítico, isso tem que ser melhorado assim que se tiver conhecimento de uma
		//maneira mais eficiente/otimizada
		//lembrando que TEM QUE SER com o JOptionPane
		
		JOptionPane.showMessageDialog(null, "Ao todo, temos " + Repositorio.clientes.size() + " clientes.");
		JOptionPane.showMessageDialog(null, "Estes sendo: " + Repositorio.clientes.keySet());
		JOptionPane.showMessageDialog(null, "Respectivos CPFs: " + Repositorio.clientes.values());
		menu();
		
	}

	@OTI(ordemPrioridade = OrdemPrioridade.TRIVIAL, item = "Acho bem eficiente esse método, alterar caso tenha uma maneira melhor", quemAssume = "Qualquer um")
	private static void cadastrar() {
		
		String nome, cpf, idade, numeroContato, endereco, numeroCard, tipoPlano;
		
		Cliente novoCliente = new Cliente();
		
		nome = JOptionPane.showInputDialog(null, "Nome:");
		novoCliente.setNome(nome);
		
		cpf = JOptionPane.showInputDialog(null, "CPF:");
		novoCliente.setCpf(cpf);
		
		if(Repositorio.clientes.containsValue(cpf)) {
			
			JOptionPane.showMessageDialog(null, "Este CPF já está cadastrado!");
			menu();
			
		}
		
		Repositorio.clientes.put(nome, cpf);
		
		idade = JOptionPane.showInputDialog(null, "Idade:");
		novoCliente.setIdade(idade);
		
		numeroContato = JOptionPane.showInputDialog(null, "Número de contato:");
		novoCliente.setNumeroContato(numeroContato);
		
		endereco = JOptionPane.showInputDialog(null, "Endereço:");
		novoCliente.setEndereco(endereco);
		
		numeroCard = JOptionPane.showInputDialog(null, "Número de cartão:");
		novoCliente.setNumeroCartao(numeroCard);
		
		tipoPlano = JOptionPane.showInputDialog(null, "Tipo de plano:");
		novoCliente.setTipoPlano(tipoPlano);
		
		JOptionPane.showMessageDialog(null, "Cadastro realizado com sucesso!");
		menu();
		
	}

	
	
}
